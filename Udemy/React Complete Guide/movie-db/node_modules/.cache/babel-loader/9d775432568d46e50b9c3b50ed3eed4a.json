{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\becad\\\\Desktop\\\\Practice\\\\Practice\\\\Udemy\\\\React Complete Guide\\\\movie-db\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n/**\n * 177\n * fetch returns a promise, eventually yields data\n * result will be there at some point in the future\n */\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [loading, isLoading] = useState(false);\n  const [error, setError] = useState(null); // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  //];\n\n  async function fetchMovies() {\n    isLoading(true);\n    setError(null);\n\n    try {\n      const res = await fetch('https://swapi.dev/api/films/');\n\n      if (!res.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      const data = await res.json();\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(data.results);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    isLoading(false);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMovies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, !loading && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 22\n    }\n  }), loading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"Loading...\"), !loading && error && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 31\n    }\n  }, error)));\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","MoviesList","App","movies","setMovies","loading","isLoading","error","setError","fetchMovies","res","fetch","ok","Error","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message"],"sources":["C:/Users/becad/Desktop/Practice/Practice/Udemy/React Complete Guide/movie-db/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\n/**\n * 177\n * fetch returns a promise, eventually yields data\n * result will be there at some point in the future\n */\n\nfunction App() {\n  const [movies, setMovies] = useState([])\n  const [loading, isLoading] = useState(false)\n  const [error, setError] = useState(null)\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  //];\n  async function fetchMovies() {\n    isLoading(true)\n    setError(null)\n    try {\n      const res = await fetch('https://swapi.dev/api/films/')\n    \n      if(!res.ok) {\n        throw new Error('Something went wrong')\n      }\n      const data = await res.json()\n\n\n    \n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        }\n      })\n      setMovies(data.results)\n      \n    } catch (error) {\n      setError(error.message)\n    }\n    isLoading(false)\n    \n    \n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMovies}>Fetch Movies</button>\n      </section>\n      <section>\n        {!loading && <MoviesList movies={movies} />}\n        \n        {loading && <p>Loading...</p>}\n        {!loading && error && <p>{error}</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAASC,GAAT,GAAe;EACb,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACK,OAAD,EAAUC,SAAV,IAAuBN,QAAQ,CAAC,KAAD,CAArC;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC,CAHa,CAIb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,eAAeS,WAAf,GAA6B;IAC3BH,SAAS,CAAC,IAAD,CAAT;IACAE,QAAQ,CAAC,IAAD,CAAR;;IACA,IAAI;MACF,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAAvB;;MAEA,IAAG,CAACD,GAAG,CAACE,EAAR,EAAY;QACV,MAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;MACD;;MACD,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;MAIA,MAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiBC,SAAS,IAAI;QACtD,OAAO;UACLC,EAAE,EAAED,SAAS,CAACE,UADT;UAELC,KAAK,EAAEH,SAAS,CAACG,KAFZ;UAGLC,WAAW,EAAEJ,SAAS,CAACK,aAHlB;UAILC,WAAW,EAAEN,SAAS,CAACO;QAJlB,CAAP;MAMD,CAPyB,CAA1B;MAQAtB,SAAS,CAACU,IAAI,CAACG,OAAN,CAAT;IAED,CApBD,CAoBE,OAAOV,KAAP,EAAc;MACdC,QAAQ,CAACD,KAAK,CAACoB,OAAP,CAAR;IACD;;IACDrB,SAAS,CAAC,KAAD,CAAT;EAGD;;EAED,oBACE,oBAAC,KAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAQ,OAAO,EAAEG,WAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBADF,CADF,eAIE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACG,CAACJ,OAAD,iBAAY,oBAAC,UAAD;IAAY,MAAM,EAAEF,MAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADf,EAGGE,OAAO,iBAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAHd,EAIG,CAACA,OAAD,IAAYE,KAAZ,iBAAqB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAIA,KAAJ,CAJxB,CAJF,CADF;AAaD;;AAED,eAAeL,GAAf"},"metadata":{},"sourceType":"module"}